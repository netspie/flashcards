@page "/projects/{projectId}"
@using Flashcards.WebApp.Shared.UseCases

@inject IScopedMediator Mediator

@if (_dto is null) { return; }

<PageTitle>Project - @_dto?.Name</PageTitle>

<MudMainContent>
    <MudContainer MaxWidth="MaxWidth.Medium" Class="!flex !flex-col !gap-8">
        <MudText Typo="@Typo.h3">@_dto.Name</MudText>
        <Flashcards.WebApp.Features.Tags.TagList ProjectId="@ProjectId" />
        <Flashcards.WebApp.Features.ConceptTemplates.ConceptTemplateList ProjectId="@ProjectId" />
    </MudContainer>
</MudMainContent>

@code {
    [Parameter] public string ProjectId { get; set; } = "";

    private GetProjectQueryResponse.ProjectDTO? _dto;

    protected override Task OnInitializedAsync() => 
        FetchItems();

    private async Task FetchItems()
    {
        var response = await Mediator.Send(new GetProjectQuery(ProjectId));
        _dto = response.Value;
    }
}